parameters:
  - name: azureSubscription
  - name: stacks
    type: object
    default:
      - name: dev.aue1
        environment: dev
        stateStorageAccount: platformdevdeploydata
      - name: dev.eu21
        environment: dev
        stateStorageAccount: platformdevdeploydata
      - name: uat.aue1
        environment: uat
        stateStorageAccount: platformuatdeploydata
      - name: uat.eu21
        environment: uat
        stateStorageAccount: platformuatdeploydata
      - name: prd.aue2
        environment: prd
        stateStorageAccount: platformprddeploydata
      - name: prd.eu22
        environment: prd
        stateStorageAccount: platformprddeploydata
      - name: prd.weu2
        environment: prd
        stateStorageAccount: platformprddeploydata
  - name: env
  - name: dropName
  - name: command
    default: preview
    values:
    - up
    - preview

steps:
- ${{ each stack in parameters.stacks }}:
  - ${{ if startsWith(stack.name, parameters.env) }}:
    - task: AzureCLI@2
      displayName: pulumi ${{ parameters.command }} ${{ stack.name }}
      inputs:
        azureSubscription: ${{ parameters.azureSubscription }}
        addSpnToEnvironment: true
        workingDirectory: $(System.ArtifactsDirectory)/${{ parameters.dropName }}
        scriptType: pscore
        scriptLocation: inlineScript
        inlineScript: |
          $env:ARM_CLIENT_ID=$env:servicePrincipalId
          $env:ARM_CLIENT_SECRET=$env:servicePrincipalKey
          $env:ARM_TENANT_ID=$env:tenantId
          $env:ARM_SUBSCRIPTION_ID=$(az account show --query "id" -o tsv)
          $env:AZURE_CLIENT_ID=$env:servicePrincipalId
          $env:AZURE_CLIENT_SECRET=$env:servicePrincipalKey
          $env:AZURE_TENANT_ID=$env:tenantId
          $env:AZURE_SUBSCRIPTION_ID=$(az account show --query "id" -o tsv)
          $env:AZURE_STORAGE_ACCOUNT="${{ stack.stateStorageAccount }}"
          $env:AZURE_STORAGE_SAS_TOKEN=$(az storage container generate-sas --account-name $env:AZURE_STORAGE_ACCOUNT --name "pulumi" --permissions dlrw --as-user --expiry $((Get-date).AddDays(1) | % { "$($_.Year)-$($_.Month)-$($_.Day)" }) --auth-mode login).Trim('"')
          pulumi login --cloud-url azblob://pulumi
          if ('${{ parameters.command }}' -eq 'preview') {
            pulumi preview --stack "${{ stack.name }}" --diff --show-replacement-steps
          }
          if ('${{ parameters.command }}' -eq 'up') {
            pulumi up --stack "${{ stack.name }}" --yes
          }